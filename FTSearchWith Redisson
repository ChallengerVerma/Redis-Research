import org.redisson.Redisson;
import org.redisson.api.RFuture;
import org.redisson.api.RedissonClient;
import org.redisson.api.RScript;
import org.redisson.client.RedisException;
import org.redisson.client.codec.StringCodec;

public class RedissonFTSearchExample {

    public static void main(String[] args) {
        RedissonClient redisson = Redisson.create();
        try {
            // Define the Lua script to execute
            String script = "return redis.call('FT.SEARCH', 'myIndex', '@name:(hello world)')";

            // Initialize a Redisson RScript object with the StringCodec
            RScript rscript = redisson.getScript(StringCodec.INSTANCE);

            // Execute the Lua script
            RFuture<Object> future = rscript.evalAsync(RScript.Mode.READ_ONLY, script);

            // Wait for the command to complete
            Object result = future.get();
            System.out.println(result);
        } catch (RedisException e) {
            e.printStackTrace();
        } finally {
            redisson.shutdown();
        }
    }
}
