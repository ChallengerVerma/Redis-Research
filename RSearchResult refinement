import java.util.List;
import java.util.stream.Collectors;
import org.redisson.Redisson;
import org.redisson.api.RedissonClient;
import org.redisson.api.RScoredSortedSet;
import org.redisson.api.RedissonReactiveClient;
import org.redisson.api.RedissonRxClient;
import org.redisson.api.search.*;
import org.redisson.config.Config;

public class EmployeeSearchExample {

    public static void main(String[] args) {

        // Create Redisson client configuration
        Config config = new Config();
        config.useSingleServer().setAddress("redis://127.0.0.1:6379");

        // Create Redisson client instance
        RedissonClient redisson = Redisson.create(config);

        // Get the RediSearch index instance
        RSearch<Employee> employeeIndex = redisson.getSearch("employees");

        // Define the RediSearch query
        RSearchResult<Employee> searchResult = employeeIndex.search("name:Bob Johnson")
                .filterBy("age", 25, 35)
                .filterBy("position", "Engineer")
                .sortBy("age")
                .limit(0, 10)
                .get();

        // Process the search results
        List<Employee> employees = searchResult.getValues().stream().map(RScoredEntry::getValue).collect(Collectors.toList());
        employees.forEach(System.out::println);

        // Close Redisson client instance
        redisson.shutdown();
    }
}
